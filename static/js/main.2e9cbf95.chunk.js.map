{"version":3,"sources":["components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","reportWebVitals.js","index.js"],"names":["ContactForm","state","name","number","nameInputId","nanoid","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","console","log","props","onSubmit","reset","this","htmlFor","id","type","onChange","pattern","title","required","Component","Filter","ContactList","contacts","onDeleteContact","map","onClick","App","filter","addContact","addedContact","find","contact","toLowerCase","alert","changeFilter","deleteContact","contactId","prevState","normalizedFilter","visibleContacts","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e9cbf95.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = nanoid(4);\n  numberInputId = nanoid(4);\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    console.log(this.state);\n\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label htmlFor={this.nameInputId}>\n          Name\n          <input\n            id={this.nameInputId}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label htmlFor={this.numberInputId}>\n          Number\n          <input\n            id={this.numberInputId}\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button>Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" value={value} onChange={onChange} />\n    </label>\n  );\n};\nexport default Filter;\n","import React from 'react';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul>\n      {contacts.map(({ id, name }) => (\n        <li key={id}>\n          {name}\n          <button type=\"button\" onClick={() => onDeleteContact(id)}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\nexport default ContactList;\n","import React, { Component, Fragment } from 'react';\nimport { nanoid } from 'nanoid';\nimport 'normalize.css';\nimport './App.css';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const addedContact = {\n      id: nanoid(4),\n      name,\n      number,\n    };\n\n    this.state.contacts.find(\n      contact => addedContact.name.toLowerCase() === contact.name.toLowerCase(),\n    )\n      ? alert(`${addedContact.name} is already in contacts`)\n      : this.setState(({ contacts }) => ({\n          contacts: [addedContact, ...contacts],\n        }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n\n    const visibleContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n\n    return (\n      <Fragment>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}